{"version":3,"sources":["../../app-es6/polyfill/fetch.js"],"names":["self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Object","getOwnPropertyNames","prototype","list","push","get","values","getAll","has","hasOwnProperty","set","callback","thisArg","call","keys","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","toString","ArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","indexOf","Request","input","options","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","XMLHttpRequest","responseURL","getResponseHeader","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"fetch.js","sourcesContent":["(function (self) {\r\n    'use strict';\r\n\r\n    if (self.fetch) {\r\n        return\r\n    }\r\n\r\n    var support = {\r\n        searchParams: 'URLSearchParams' in self,\r\n        iterable: 'Symbol' in self && 'iterator' in Symbol,\r\n        blob: 'FileReader' in self && 'Blob' in self && (function () {\r\n            try {\r\n                new Blob()\r\n                return true\r\n            } catch (e) {\r\n                return false\r\n            }\r\n        })(),\r\n        formData: 'FormData' in self,\r\n        arrayBuffer: 'ArrayBuffer' in self\r\n    }\r\n\r\n    function normalizeName(name) {\r\n        if (typeof name !== 'string') {\r\n            name = String(name)\r\n        }\r\n        if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\r\n            throw new TypeError('Invalid character in header field name')\r\n        }\r\n        return name.toLowerCase()\r\n    }\r\n\r\n    function normalizeValue(value) {\r\n        if (typeof value !== 'string') {\r\n            value = String(value)\r\n        }\r\n        return value\r\n    }\r\n\r\n    // Build a destructive iterator for the value list\r\n    function iteratorFor(items) {\r\n        var iterator = {\r\n            next: function () {\r\n                var value = items.shift()\r\n                return {\r\n                    done: value === undefined,\r\n                    value: value\r\n                }\r\n            }\r\n        }\r\n\r\n        if (support.iterable) {\r\n            iterator[Symbol.iterator] = function () {\r\n                return iterator\r\n            }\r\n        }\r\n\r\n        return iterator\r\n    }\r\n\r\n    function Headers(headers) {\r\n        this.map = {}\r\n\r\n        if (headers instanceof Headers) {\r\n            headers.forEach(function (value, name) {\r\n                this.append(name, value)\r\n            }, this)\r\n\r\n        } else if (headers) {\r\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\r\n                this.append(name, headers[name])\r\n            }, this)\r\n        }\r\n    }\r\n\r\n    Headers.prototype.append = function (name, value) {\r\n        name = normalizeName(name)\r\n        value = normalizeValue(value)\r\n        var list = this.map[name]\r\n        if (!list) {\r\n            list = []\r\n            this.map[name] = list\r\n        }\r\n        list.push(value)\r\n    }\r\n\r\n    Headers.prototype['delete'] = function (name) {\r\n        delete this.map[normalizeName(name)]\r\n    }\r\n\r\n    Headers.prototype.get = function (name) {\r\n        var values = this.map[normalizeName(name)]\r\n        return values ? values[0] : null\r\n    }\r\n\r\n    Headers.prototype.getAll = function (name) {\r\n        return this.map[normalizeName(name)] || []\r\n    }\r\n\r\n    Headers.prototype.has = function (name) {\r\n        return this.map.hasOwnProperty(normalizeName(name))\r\n    }\r\n\r\n    Headers.prototype.set = function (name, value) {\r\n        this.map[normalizeName(name)] = [normalizeValue(value)]\r\n    }\r\n\r\n    Headers.prototype.forEach = function (callback, thisArg) {\r\n        Object.getOwnPropertyNames(this.map).forEach(function (name) {\r\n            this.map[name].forEach(function (value) {\r\n                callback.call(thisArg, value, name, this)\r\n            }, this)\r\n        }, this)\r\n    }\r\n\r\n    Headers.prototype.keys = function () {\r\n        var items = []\r\n        this.forEach(function (value, name) {\r\n            items.push(name)\r\n        })\r\n        return iteratorFor(items)\r\n    }\r\n\r\n    Headers.prototype.values = function () {\r\n        var items = []\r\n        this.forEach(function (value) {\r\n            items.push(value)\r\n        })\r\n        return iteratorFor(items)\r\n    }\r\n\r\n    Headers.prototype.entries = function () {\r\n        var items = []\r\n        this.forEach(function (value, name) {\r\n            items.push([name, value])\r\n        })\r\n        return iteratorFor(items)\r\n    }\r\n\r\n    if (support.iterable) {\r\n        Headers.prototype[Symbol.iterator] = Headers.prototype.entries\r\n    }\r\n\r\n    function consumed(body) {\r\n        if (body.bodyUsed) {\r\n            return Promise.reject(new TypeError('Already read'))\r\n        }\r\n        body.bodyUsed = true\r\n    }\r\n\r\n    function fileReaderReady(reader) {\r\n        return new Promise(function (resolve, reject) {\r\n            reader.onload = function () {\r\n                resolve(reader.result)\r\n            }\r\n            reader.onerror = function () {\r\n                reject(reader.error)\r\n            }\r\n        })\r\n    }\r\n\r\n    function readBlobAsArrayBuffer(blob) {\r\n        var reader = new FileReader()\r\n        reader.readAsArrayBuffer(blob)\r\n        return fileReaderReady(reader)\r\n    }\r\n\r\n    function readBlobAsText(blob) {\r\n        var reader = new FileReader()\r\n        reader.readAsText(blob)\r\n        return fileReaderReady(reader)\r\n    }\r\n\r\n    function Body() {\r\n        this.bodyUsed = false\r\n\r\n        this._initBody = function (body) {\r\n            this._bodyInit = body\r\n            if (typeof body === 'string') {\r\n                this._bodyText = body\r\n            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\r\n                this._bodyBlob = body\r\n            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\r\n                this._bodyFormData = body\r\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n                this._bodyText = body.toString()\r\n            } else if (!body) {\r\n                this._bodyText = ''\r\n            } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\r\n                // Only support ArrayBuffers for POST method.\r\n                // Receiving ArrayBuffers happens via Blobs, instead.\r\n            } else {\r\n                throw new Error('unsupported BodyInit type')\r\n            }\r\n\r\n            if (!this.headers.get('content-type')) {\r\n                if (typeof body === 'string') {\r\n                    this.headers.set('content-type', 'text/plain;charset=UTF-8')\r\n                } else if (this._bodyBlob && this._bodyBlob.type) {\r\n                    this.headers.set('content-type', this._bodyBlob.type)\r\n                } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n                    this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (support.blob) {\r\n            this.blob = function () {\r\n                var rejected = consumed(this)\r\n                if (rejected) {\r\n                    return rejected\r\n                }\r\n\r\n                if (this._bodyBlob) {\r\n                    return Promise.resolve(this._bodyBlob)\r\n                } else if (this._bodyFormData) {\r\n                    throw new Error('could not read FormData body as blob')\r\n                } else {\r\n                    return Promise.resolve(new Blob([this._bodyText]))\r\n                }\r\n            }\r\n\r\n            this.arrayBuffer = function () {\r\n                return this.blob().then(readBlobAsArrayBuffer)\r\n            }\r\n\r\n            this.text = function () {\r\n                var rejected = consumed(this)\r\n                if (rejected) {\r\n                    return rejected\r\n                }\r\n\r\n                if (this._bodyBlob) {\r\n                    return readBlobAsText(this._bodyBlob)\r\n                } else if (this._bodyFormData) {\r\n                    throw new Error('could not read FormData body as text')\r\n                } else {\r\n                    return Promise.resolve(this._bodyText)\r\n                }\r\n            }\r\n        } else {\r\n            this.text = function () {\r\n                var rejected = consumed(this)\r\n                return rejected ? rejected : Promise.resolve(this._bodyText)\r\n            }\r\n        }\r\n\r\n        if (support.formData) {\r\n            this.formData = function () {\r\n                return this.text().then(decode)\r\n            }\r\n        }\r\n\r\n        this.json = function () {\r\n            return this.text().then(JSON.parse)\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    // HTTP methods whose capitalization should be normalized\r\n    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\r\n\r\n    function normalizeMethod(method) {\r\n        var upcased = method.toUpperCase()\r\n        return (methods.indexOf(upcased) > -1) ? upcased : method\r\n    }\r\n\r\n    function Request(input, options) {\r\n        options = options || {}\r\n        var body = options.body\r\n        if (Request.prototype.isPrototypeOf(input)) {\r\n            if (input.bodyUsed) {\r\n                throw new TypeError('Already read')\r\n            }\r\n            this.url = input.url\r\n            this.credentials = input.credentials\r\n            if (!options.headers) {\r\n                this.headers = new Headers(input.headers)\r\n            }\r\n            this.method = input.method\r\n            this.mode = input.mode\r\n            if (!body) {\r\n                body = input._bodyInit\r\n                input.bodyUsed = true\r\n            }\r\n        } else {\r\n            this.url = input\r\n        }\r\n\r\n        this.credentials = options.credentials || this.credentials || 'omit'\r\n        if (options.headers || !this.headers) {\r\n            this.headers = new Headers(options.headers)\r\n        }\r\n        this.method = normalizeMethod(options.method || this.method || 'GET')\r\n        this.mode = options.mode || this.mode || null\r\n        this.referrer = null\r\n\r\n        if ((this.method === 'GET' || this.method === 'HEAD') && body) {\r\n            throw new TypeError('Body not allowed for GET or HEAD requests')\r\n        }\r\n        this._initBody(body)\r\n    }\r\n\r\n    Request.prototype.clone = function () {\r\n        return new Request(this)\r\n    }\r\n\r\n    function decode(body) {\r\n        var form = new FormData()\r\n        body.trim().split('&').forEach(function (bytes) {\r\n            if (bytes) {\r\n                var split = bytes.split('=')\r\n                var name = split.shift().replace(/\\+/g, ' ')\r\n                var value = split.join('=').replace(/\\+/g, ' ')\r\n                form.append(decodeURIComponent(name), decodeURIComponent(value))\r\n            }\r\n        })\r\n        return form\r\n    }\r\n\r\n    function headers(xhr) {\r\n        var head = new Headers()\r\n        var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\r\n        pairs.forEach(function (header) {\r\n            var split = header.trim().split(':')\r\n            var key = split.shift().trim()\r\n            var value = split.join(':').trim()\r\n            head.append(key, value)\r\n        })\r\n        return head\r\n    }\r\n\r\n    Body.call(Request.prototype)\r\n\r\n    function Response(bodyInit, options) {\r\n        if (!options) {\r\n            options = {}\r\n        }\r\n\r\n        this.type = 'default'\r\n        this.status = options.status\r\n        this.ok = this.status >= 200 && this.status < 300\r\n        this.statusText = options.statusText\r\n        this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\r\n        this.url = options.url || ''\r\n        this._initBody(bodyInit)\r\n    }\r\n\r\n    Body.call(Response.prototype)\r\n\r\n    Response.prototype.clone = function () {\r\n        return new Response(this._bodyInit, {\r\n            status: this.status,\r\n            statusText: this.statusText,\r\n            headers: new Headers(this.headers),\r\n            url: this.url\r\n        })\r\n    }\r\n\r\n    Response.error = function () {\r\n        var response = new Response(null, {\r\n            status: 0,\r\n            statusText: ''\r\n        })\r\n        response.type = 'error'\r\n        return response\r\n    }\r\n\r\n    var redirectStatuses = [301, 302, 303, 307, 308]\r\n\r\n    Response.redirect = function (url, status) {\r\n        if (redirectStatuses.indexOf(status) === -1) {\r\n            throw new RangeError('Invalid status code')\r\n        }\r\n\r\n        return new Response(null, {\r\n            status: status,\r\n            headers: {\r\n                location: url\r\n            }\r\n        })\r\n    }\r\n\r\n    self.Headers = Headers\r\n    self.Request = Request\r\n    self.Response = Response\r\n\r\n    self.fetch = function (input, init) {\r\n        return new Promise(function (resolve, reject) {\r\n            var request\r\n            if (Request.prototype.isPrototypeOf(input) && !init) {\r\n                request = input\r\n            } else {\r\n                request = new Request(input, init)\r\n            }\r\n\r\n            var xhr = new XMLHttpRequest()\r\n\r\n            function responseURL() {\r\n                if ('responseURL' in xhr) {\r\n                    return xhr.responseURL\r\n                }\r\n\r\n                // Avoid security warnings on getResponseHeader when not allowed by CORS\r\n                if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\r\n                    return xhr.getResponseHeader('X-Request-URL')\r\n                }\r\n\r\n                return\r\n            }\r\n\r\n            xhr.onload = function () {\r\n                var options = {\r\n                    status: xhr.status,\r\n                    statusText: xhr.statusText,\r\n                    headers: headers(xhr),\r\n                    url: responseURL()\r\n                }\r\n                var body = 'response' in xhr ? xhr.response : xhr.responseText\r\n                resolve(new Response(body, options))\r\n            }\r\n\r\n            xhr.onerror = function () {\r\n                reject(new TypeError('Network request failed'))\r\n            }\r\n\r\n            xhr.ontimeout = function () {\r\n                reject(new TypeError('Network request failed'))\r\n            }\r\n\r\n            xhr.open(request.method, request.url, true)\r\n\r\n            if (request.credentials === 'include') {\r\n                xhr.withCredentials = true\r\n            }\r\n\r\n            if ('responseType' in xhr && support.blob) {\r\n                xhr.responseType = 'blob'\r\n            }\r\n\r\n            request.headers.forEach(function (value, name) {\r\n                xhr.setRequestHeader(name, value)\r\n            })\r\n\r\n            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\r\n        })\r\n    }\r\n    self.fetch.polyfill = true\r\n})(typeof self !== 'undefined' ? self : this);"]}